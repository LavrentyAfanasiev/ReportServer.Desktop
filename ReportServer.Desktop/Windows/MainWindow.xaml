<Window x:Class="ReportServer.Desktop.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ReportServer.Desktop"
        xmlns:converters="clr-namespace:ReportServer.Desktop.Converters"
        xmlns:interfaces="clr-namespace:ReportServer.Desktop.Interfaces"
        xmlns:behaviors="clr-namespace:ReportServer.Desktop.Behaviors"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:controls="clr-namespace:ReportServer.Desktop.Views"
        mc:Ignorable="d"
        Title="ReportRedactor" MinHeight="800" MinWidth="1200">
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
        </Style>
        <Style TargetType="GridViewColumnHeader">
            <Setter Property="Padding" Value="20 5 20 5"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        </Style>
        <Style TargetType="ListViewItem">
            <Setter Property="BorderBrush" Value="Black"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        </Style>
        <Style TargetType="Rectangle">
            <Setter Property="Stroke" Value="Black"></Setter>
            <Setter Property="Fill" Value="Transparent"></Setter>
            <Setter Property="StrokeThickness" Value="0.5"></Setter>
        </Style>
        <Style TargetType="Label">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="AcceptsReturn" Value="True"/>
        </Style>

    </Window.Resources>

    <Grid>


        <Grid.RowDefinitions>
            <RowDefinition Height="45"/>
            <RowDefinition Height="3.5*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <!--<xctk:WindowContainer ZIndex="1" Grid.ColumnSpan="3" Grid.RowSpan="4">
            <xctk:ChildWindow WindowBackground="AliceBlue" Background="AliceBlue" Height="350" Width="350" Caption="ViewTemplateEditor" IsModal="True" CloseButtonVisibility="Collapsed" DesignerWindowState="Open"
                          WindowStartupLocation="Center"  WindowState="{Binding ViewTemplateChildWindowState}" Margin="0,-1,0,1" >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="45"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <TextBox Grid.ColumnSpan="2" Name="ViewTemplate" Text="" />
                    <Button Grid.Row="1" Command="{Binding SaveViewTemplateCommand}" CommandParameter="{Binding Text,ElementName=ViewTemplate}">OK</Button>
                    <Button Grid.Row="1" Grid.Column="1" Command="{Binding CancelViewTemplateCommand}">Cancel</Button>
                </Grid>
            </xctk:ChildWindow>

            <xctk:ChildWindow WindowBackground="AliceBlue" Background="AliceBlue" Height="350" Width="350" Caption="QueryTemplateEditor"  IsModal="True" CloseButtonVisibility="Collapsed" DesignerWindowState="Open"
                          WindowStartupLocation="Center"  WindowState="{Binding QueryTemplateChildWindowState}" Margin="0,-1,0,1" >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="45"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <TextBox Grid.ColumnSpan="2" Name="Query" Text="" />
                    <Button Grid.Row="1" Command="{Binding SaveQueryTemplateCommand}" CommandParameter="{Binding Text,ElementName=Query}">OK</Button>
                    <Button Grid.Row="1" Grid.Column="1" Command="{Binding CancelQueryTemplateCommand}">Cancel</Button>
                </Grid>
            </xctk:ChildWindow>
        </xctk:WindowContainer>-->

        <StackPanel Grid.ColumnSpan="3" Orientation="Horizontal">
            <Button Content="Добавить задачу" Command="{Binding CreateTaskCommand}"/>
            <Button Content="Сохранить задачу" Command="{Binding SaveTaskCommand}"/>
            <Button Content="Удалить" Command="{Binding DeleteCommand}"/>
        </StackPanel>
        <!--buttons-->
        <controls:TaskListView Grid.Row="1"/>
       
        <GridSplitter Grid.Column="1" Grid.Row="1" Width="2.5" VerticalAlignment="Stretch" HorizontalAlignment="Center" ShowsPreview="False"></GridSplitter>

        <Grid Grid.Row="1" Grid.Column="2" >
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <ListView HorizontalAlignment="Stretch" ItemsSource="{Binding SelectedTaskInstanceCompacts}" SelectedItem="{Binding SelectedInstanceCompact}">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="StartTime"  DisplayMemberBinding="{Binding StringFormat=dd.MM.yy HH:mm, Path=StartTime}" />
                        <GridViewColumn Header="Duration"  DisplayMemberBinding="{Binding Duration, Converter={converters:IntMsToMinsConverter}}"/>
                        <GridViewColumn Header="State"  DisplayMemberBinding="{Binding State}" />
                        <GridViewColumn Header="TryNumber"  DisplayMemberBinding="{Binding TryNumber}"/>
                    </GridView>
                </ListView.View>
            </ListView>

            <GridSplitter  Grid.Row="1" Height="2.5" VerticalAlignment="Center" HorizontalAlignment="Stretch" ShowsPreview="False"></GridSplitter>
            <Grid Grid.Row="2" Visibility="{Binding SelectedTask,Converter={converters:NullToVisiblityConverter} }">

                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Rectangle Grid.ColumnSpan="2"/>
                <Rectangle Grid.ColumnSpan="2" Grid.Row="1"/>
                <Rectangle Grid.ColumnSpan="2" Grid.Row="2"/>
                <Rectangle Grid.ColumnSpan="2" Grid.Row="3"/>
                <Rectangle Grid.ColumnSpan="2" Grid.Row="4"/>
                <Rectangle Grid.ColumnSpan="2" Grid.Row="5"/>
                <Rectangle Grid.ColumnSpan="2" Grid.Row="6"/>
                <Rectangle Grid.ColumnSpan="2" Grid.Row="7"/>
                <Rectangle Grid.ColumnSpan="2" Grid.Row="8"/>
                <Rectangle Grid.Row="1" Grid.RowSpan="8" />

                <Grid Grid.ColumnSpan="2" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Label  Content="Информация о задаче"/>
                    <Button Grid.Column="1" Margin="0" Command="{Binding OpenCurrentTaskView}" CommandParameter="{Binding SelectedTaskCompact.Id}">Сформировать отчёт</Button>
                </Grid>
                <Label Grid.Row="1"  Content="Schedule"/>
                <Label Grid.Row="2"  Content="ConnectionString"/>
                <Label Grid.Row="3"  Content="ViewTemplate"/>
                <Label Grid.Row="4"  Content="Query"/>
                <Label Grid.Row="5"  Content="RecepientGroup"/>
                <Label Grid.Row="6"  Content="TryCount"/>
                <Label Grid.Row="7"  Content="QueryTimeOut"/>
                <Label Grid.Row="8"  Content="ReportType"/>

                <ComboBox Grid.Column="1" Grid.Row="1" ItemsSource="{Binding Schedules}" SelectedValuePath="Name"   DisplayMemberPath="Name" SelectedValue="{Binding SelectedTask.Schedule}"/>
                <TextBox Grid.Column="1" Grid.Row="2"  HorizontalAlignment="Stretch"  Text="{Binding SelectedTask.ConnectionString}"/>
                <controls:ViewTemplateControl Grid.Column="1" Grid.Row="3"/>
                <controls:QueryControl Grid.Column="1" Grid.Row="4"/>
                <ComboBox Grid.Column="1" Grid.Row="5"  HorizontalAlignment="Stretch"   ItemsSource="{Binding RecepientGroups}" DisplayMemberPath="Name" SelectedValuePath="Name" SelectedValue="{Binding SelectedTask.RecepientGroup}"/>
                <TextBox Grid.Column="1" Grid.Row="6"  HorizontalAlignment="Stretch"   Text="{Binding SelectedTask.TryCount }">
                    <i:Interaction.Behaviors>
                        <behaviors:TextBoxInputBehavior InputMode="DigitInput"/>
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBox Grid.Column="1" Grid.Row="7"  HorizontalAlignment="Stretch" Text="{Binding SelectedTask.QueryTimeOut}">
                    <i:Interaction.Behaviors>
                        <behaviors:TextBoxInputBehavior InputMode="DigitInput"/>
                    </i:Interaction.Behaviors>
                </TextBox>
                <ComboBox Grid.Column="1" Grid.Row="8"  HorizontalAlignment="Stretch"  ItemsSource="{Binding Source={converters:EnumBindingSource {x:Type interfaces:ReportType}}}" SelectedValue="{Binding SelectedTask.ReportType}"/>
            </Grid>
        </Grid>

        <GridSplitter  Grid.Row="2" Height="2.5" Grid.ColumnSpan="3" VerticalAlignment="Center" HorizontalAlignment="Stretch" ShowsPreview="False"></GridSplitter>
        <Grid Grid.Row="3" Grid.ColumnSpan="3">

            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Rectangle Grid.ColumnSpan="4"/>
            <Rectangle Grid.Row="1" Grid.ColumnSpan="2"/>
            <Rectangle Grid.Row="2" Grid.ColumnSpan="2"/>
            <Rectangle Grid.Row="3" Grid.ColumnSpan="2"/>
            <Rectangle Grid.Row="4" Grid.ColumnSpan="2"/>
            <Rectangle Grid.Row="1" Grid.RowSpan="4"/>
            <Rectangle Grid.Column="2" Grid.Row="1" Grid.RowSpan="4" />
            <Rectangle Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="1" Grid.RowSpan="2"/>
            <Rectangle Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="3" Grid.RowSpan="2"/>

            <Grid Grid.ColumnSpan="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Label  Content="Информация об отчёте"/>
                <Button Grid.Column="1" Margin="0" Command="{Binding OpenPage}" CommandParameter="{Binding SelectedInstance.ViewData}">Открыть отчёт</Button>
            </Grid>

            <Label Grid.Row="1"  Content="StartTime"/>
            <Label Grid.Row="2"  Content="Duration"/>
            <Label Grid.Row="3"  Content="State"/>
            <Label Grid.Row="4"  Content="TryNumber"/>
            <Label Grid.Column="2" Grid.RowSpan="3"  Content="Data"/>
            <Label Grid.Column="2" Grid.Row="3" Grid.RowSpan="2"  Content="ViewData"/>

            <TextBlock Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch"  Text="{Binding StringFormat=dd.MM.yy HH:mm, Path= SelectedInstance.StartTime}"/>
            <TextBlock Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch"  Text="{Binding SelectedInstance.Duration, Converter={converters:IntMsToMinsConverter}}"/>
            <TextBlock Grid.Column="1" Grid.Row="3" HorizontalAlignment="Stretch"  Text="{Binding SelectedInstance.State}"/>
            <TextBlock Grid.Column="1" Grid.Row="4" HorizontalAlignment="Stretch"  Text="{Binding SelectedInstance.TryNumber}"/>
            <TextBlock Grid.Column="3" Grid.Row="1" Grid.RowSpan="2" HorizontalAlignment="Stretch"  Text="{Binding SelectedInstance.Data}"/>
            <TextBlock Grid.Column="3" Grid.Row="3" Grid.RowSpan="2" HorizontalAlignment="Stretch"  Text="{Binding SelectedInstance.ViewData}"/>
        </Grid>

    </Grid>
</Window>

<!--
            xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    <xcad:DockingManager Grid.Row="1" BorderBrush="MidnightBlue" BorderThickness="0.5" >
            <xcad:DockingManager.Theme>
                <xcad:MetroTheme/>
            </xcad:DockingManager.Theme>
            <xcad:DockingManager.AnchorableHeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Title}" />
                    </StackPanel>
                </DataTemplate>
            </xcad:DockingManager.AnchorableHeaderTemplate>
            <xcad:LayoutRoot>
                <xcad:LayoutPanel>
                    <xcad:LayoutAnchorablePane DockWidth="250">
                        <xcad:LayoutAnchorable Title="Tasks" CanHide="False" CanClose="False">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="27*"/>
                                    <RowDefinition Height="441*"/>
                                    <RowDefinition Height="43*"/>
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock  Text="Id "></TextBlock>
                                    <TextBlock  Text="ScheduleId "></TextBlock>
                                    <TextBlock  Text="ConnectionString "></TextBlock>
                                    <TextBlock  Text="RecepientGroupId "></TextBlock>
                                    <TextBlock  Text="TryCount "></TextBlock>
                                    <TextBlock  Text="QueryTimeOut "></TextBlock>
                                    <TextBlock  Text="TaskType "></TextBlock>
                                </StackPanel>
                                <ListBox HorizontalContentAlignment="Stretch"  ItemsSource="{Binding _taskCompacts}" Grid.RowSpan="2" Grid.Row="1">
                                    <ListBox.ItemTemplate >
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock  Text="{Binding Path=Id}"> </TextBlock>
                                                <TextBlock  Text="{Binding Path=ScheduleId}"> </TextBlock>
                                                <TextBlock  Text="{Binding Path=ConnectionString}"> </TextBlock>
                                                <TextBlock  Text="{Binding Path=RecepientGroupId}"> </TextBlock>
                                                <TextBlock  Text="{Binding Path=TryCount}"> </TextBlock>
                                                <TextBlock  Text="{Binding Path=QueryTimeOut}"> </TextBlock>
                                                <TextBlock  Text="{Binding Path=TaskType}"> </TextBlock>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <Button Grid.Row="2"  Command="{Binding StartCommand}" Padding="150 0 0 0">Обновить данные</Button>
                            </Grid>
                        </xcad:LayoutAnchorable>
                    </xcad:LayoutAnchorablePane>
                </xcad:LayoutPanel>
            </xcad:LayoutRoot>
        </xcad:DockingManager>-->

