using MahApps.Metro.Controls.Dialogs;
using ReportServer.Desktop.Views.WpfResources;
using ReportServer.Desktop.ViewModels;

UserControl "ReportServer.Desktop.Views.CronEditorView" {
  "xmlns:viewModels": "clr-namespace:ReportServer.Desktop.ViewModels"
  DialogParticipation.Register: "{Binding}"
  Resources: ResourceDictionary { Source: "WpfResources/TemplatesDictionary.g.xaml" }
  Grid {
    RowDefinitions: [
      RowDefinition { Height: "Auto" }
      RowDefinition { Height: "Auto" }
      RowDefinition { Height: "Auto" }
      RowDefinition { Height: "Auto" }
      RowDefinition { }
      RowDefinition { Height: "Auto" }
    ]
    Label { Content: "Schedule editor" }
    StackPanel {
      Grid.Row: "1"
      Orientation: "Horizontal"
      Label {
        Background: "White"
        HorizontalAlignment: "Left"
        Margin: "18 3 3 3"
        Content: "Name"
      }
      TextBox {
        Margin: "3 3 15 3"
        TextWrapping: "NoWrap"
        AcceptsReturn: "False"
        Width: "250"
        Text: "{Binding Name,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
      }
    }
    StackPanel {
      Grid.Row: "2"
      Orientation: "Horizontal"
      Label {
        Background: "White"
        HorizontalAlignment: "Left"
        Margin: "18 3 3 3"
        Content: "Cron expression for schedule"
      }
      TextBox {
        Margin: "3 3 15 3"
        TextWrapping: "NoWrap"
        AcceptsReturn: "False"
        Width: "250"
        Text: "{Binding FullExpression,UpdateSourceTrigger=PropertyChanged,                 ValidatesOnDataErrors=True}"
      }
      Label {
        Background: "White"
        HorizontalAlignment: "Left"
        Margin: "18 3 3 3"
        Content: "Schedule"
      }
      TextBlock { Text: "{Binding FullStringExpression}" }
    }
    Label { Grid.Row: "3",  Content: "Custom schedule parts" }
    ListView {
      BorderThickness: "0"
      Grid.Row: "4"
      HorizontalAlignment: "Left"
      ItemsSource: "{Binding Categories}"
      ItemTemplate: DataTemplate {
        StackPanel {
          Grid {
            ColumnDefinitions: [
              ColumnDefinition { }
              ColumnDefinition { Width: "Auto" }
            ]
            Label { Content: "{Binding DescriprionType}" }
            Button {
              Grid.Column: "1"
              HorizontalAlignment: "Right"
              Command: "{Binding AddCategoryCommand}"
              Width: "45"
              FontSize: "15"
              "+"
            }
          }
          ListView {
            BorderThickness: "0"
            ScrollViewer.CanContentScroll: "True"
            MaxHeight: "200"
            ItemsSource: "{Binding ExpressionParts}"
            ItemTemplate: DataTemplate {
              Grid {
                HorizontalAlignment: "Left"
                ColumnDefinitions: [
                  ColumnDefinition { Width: "Auto" }
                  ColumnDefinition { Width: "Auto" }
                  ColumnDefinition { Width: "Auto" }
                  ColumnDefinition { Width: "Auto" }
                  ColumnDefinition { Width: "Auto" }
                  ColumnDefinition { Width: "Auto" }
                  ColumnDefinition { Width: "Auto" }
                  ColumnDefinition { Width: "Auto" }
                ]
                Label {
                  Background: "White"
                  HorizontalAlignment: "Left"
                  Margin: "18 3 3 3"
                  Content: "Value type"
                }
                ComboBox {
                  Grid.Column: "1"
                  Width: "250"
                  HorizontalAlignment: "Left"
                  ItemsSource: bind from $resource ParsingEnum
                  SelectedValue: "{Binding ParsingCategory}"
                }
                Label {
                  Grid.Column: "2"
                  Background: "White"
                  HorizontalAlignment: "Left"
                  Margin: "18 3 3 3"
                  Content: "Value"
                }
                TextBox {
                  Grid.Column: "3"
                  Margin: "3"
                  Width: "150"
                  TextWrapping: "NoWrap"
                  IsEnabled: "{Binding ParsingCategory,   Converter={StaticResource ParsingCategoryToBool}}"
                  AcceptsReturn: "False"
                  Text: "{Binding Value, UpdateSourceTrigger=PropertyChanged}"
                }
                Grid {
                  Grid.Column: "3"
                  Margin: "3"
                  Width: "150"
                  Background: "White"
                  Panel.ZIndex: "1"
                  Visibility: "{Binding ParsingCategory,  Converter={StaticResource IsRangeToVisibility}}"
                  ColumnDefinitions: [
                    ColumnDefinition { }
                    ColumnDefinition { Width: "Auto" }
                    ColumnDefinition { }
                  ]
                  TextBox {
                    TextWrapping: "NoWrap"
                    AcceptsReturn: "False"
                    Text: "{Binding Value, UpdateSourceTrigger=PropertyChanged, ConverterParameter=0 ,Converter={StaticResource TwoBoxesConverter}}"
                  }
                  Label {
                    Grid.Column: "1"
                    Background: "White"
                    HorizontalAlignment: "Left"
                    Margin: "3"
                    Content: "-"
                  }
                  TextBox {
                    TextWrapping: "NoWrap"
                    Grid.Column: "2"
                    AcceptsReturn: "False"
                    Text: "{Binding Value, UpdateSourceTrigger=PropertyChanged, ConverterParameter=1 ,Converter={StaticResource TwoBoxesConverter}}"
                  }
                }
                Label {
                  Grid.Column: "4"
                  Background: "White"
                  HorizontalAlignment: "Left"
                  Margin: "18 3 3 3"
                  Content: "Has step"
                  Visibility: "{Binding ParsingCategory, Converter={StaticResource IsNotValueToVisibility}}"
                }
                CheckBox {
                  Grid.Column: "5"
                  IsChecked: "{Binding HasStep}"
                  Visibility: "{Binding ParsingCategory, Converter={StaticResource IsNotValueToVisibility}}"
                }
                TextBox {
                  Grid.Column: "6"
                  IsEnabled: "{Binding HasStep}"
                  Width: "50"
                  Margin: "18 3 3 3"
                  TextWrapping: "NoWrap"
                  AcceptsReturn: "False"
                  Text: "{Binding Step, UpdateSourceTrigger=PropertyChanged}"
                  Visibility: "{Binding ParsingCategory, Converter={StaticResource IsNotValueToVisibility}}"
                }
                Button {
                  Grid.Column: "7"
                  Visibility: "{Binding  RelativeSource={RelativeSource AncestorType={x:Type ListView}},  Path=DataContext.ExpressionParts.Count,  Converter={StaticResource MoreThenOneToVisibility}}"
                  FontSize: "15"
                  Margin: "50 3 2.5 3"
                  Command: "{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=DataContext.RemoveCategoryCommand}"
                  Width: "45"
                  CommandParameter: "{Binding}"
                  "-"
                }
              }
            }
          }
        }
      }
    }
    Grid {
      Grid.Row: "5"
      Margin: "0 0 0 50"
      ColumnDefinitions: [
        ColumnDefinition { Width: "0.4*" }
        ColumnDefinition { }
      ]
      StackPanel {
        Grid.Column: "1"
        Orientation: "Horizontal"
        Button {
          Command: "{Binding SaveChangesCommand}"
          IsEnabled: "{Binding IsValid}"
          Height: "25"
          Width: "100"
          "Save"
        }
        Button {
          Command: "{Binding CancelCommand}"
          Height: "25"
          Width: "100"
          "Cancel"
        }
      }
    }
  }
}