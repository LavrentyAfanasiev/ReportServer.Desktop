<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:viewModels="clr-namespace:ReportServer.Desktop.ViewModels">

    <Style x:Key="MyColumnHeader" 
         BasedOn="{StaticResource MetroDataGridColumnHeader}" 
         TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="#F5F5F5"/>
        <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
    </Style>

    <Style x:Key="MyCell"
           TargetType="DataGridCell"
           >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Background" Value="#F5F5F5"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="2"/>
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="CellStyle" Value="{StaticResource MyCell}"/>
        <Setter Property="RowBackground" Value="#F5F5F5"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="ColumnWidth" Value="*"/>
        <Setter Property="RowHeight" Value="25"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="GridLinesVisibility" Value="All"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="HorizontalGridLinesBrush" Value="Gray"/>
        <Setter Property="VerticalGridLinesBrush" Value="Gray"/>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource MyColumnHeader}"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment"  Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style TargetType="Label">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment"  Value="Center"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Background" Value="#F5F5F5"/>
        <Setter Property="Margin" Value="2"/>
    </Style>

    <Style TargetType="TextBox"
           BasedOn="{StaticResource MetroTextBox}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment"  Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="AcceptsReturn" Value="True"/>
    </Style>

    <Style TargetType="Border">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush"  Value="#F5F5F5"/>
        <Setter Property="Margin" Value="0.5"/>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="Margin" Value="15 0 0 0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment"  Value="Center"/>
    </Style>

    <Style TargetType="Popup">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Placement" Value="Right"/>
        <Setter Property="FlowDirection" Value="RightToLeft"/>
    </Style>

    <DataTemplate DataType="{x:Type viewModels:RecepientEditorViewModel}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Label   Background="White" HorizontalAlignment="Left" 
                              Margin="18 3 3 3" Content="Name"/>

            <TextBox Grid.Column="1"  Text="{Binding Name,UpdateSourceTrigger=PropertyChanged,
            ValidatesOnDataErrors=True}"
                     mah:TextBoxHelper.Watermark=
                     "Enter group name here"
                     mah:TextBoxHelper.ClearTextButton="True"
                     Width="150"
                     TextWrapping="NoWrap"
                     AcceptsReturn="False"
                     HorizontalAlignment="Left"
                     HorizontalContentAlignment="Left"/>

            <Label Grid.Row="1" Background="White" HorizontalAlignment="Left" 
                     Margin="18 3 3 3" Content="Addresses"/>

            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Addresses,UpdateSourceTrigger=PropertyChanged,
            ValidatesOnDataErrors=True}"
                     mah:TextBoxHelper.Watermark=
                     "Enter e-mail addresses of recepients separated by semicolons"
                     mah:TextBoxHelper.ClearTextButton="True"
                     Width="500"
                     TextWrapping="NoWrap"
                     AcceptsReturn="False"
                     HorizontalAlignment="Left"
                     HorizontalContentAlignment="Left"/>

            <Label Grid.Row="2" Background="White" HorizontalAlignment="Left" 
                   Margin="18 3 3 3" Content="Blind copy addresses"/>

            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding AddressesBcc,UpdateSourceTrigger=PropertyChanged,
            ValidatesOnDataErrors=True}"
                     mah:TextBoxHelper.Watermark=
                     "Enter e-mail addresses separated by semicolons for blind copy sending"
                     mah:TextBoxHelper.ClearTextButton="True"
                     Width="500"
                     TextWrapping="NoWrap"
                     AcceptsReturn="False"
                     HorizontalAlignment="Left"
                     HorizontalContentAlignment="Left"/>

            <Grid Grid.Row="3" Grid.Column="1" Margin="0 0 0 50">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition  Width="0.4*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="1" Orientation="Horizontal">

                    <Button Command="{Binding SaveChangesCommand}" 
                            IsEnabled="{Binding IsValid}" Height="25" Width="100">Save</Button>

                    <Button Command="{Binding CancelCommand}" Height="25" Width="100">Cancel</Button>

                </StackPanel>
            </Grid>
        </Grid>
    </DataTemplate>

    <Style  TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Name="Border" BorderBrush="Transparent" BorderThickness="0">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>