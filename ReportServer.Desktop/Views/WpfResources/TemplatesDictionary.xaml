<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls">

    <Style x:Key="MyColumnHeader" 
         BasedOn="{StaticResource MetroDataGridColumnHeader}" 
         TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="#F5F5F5"/>
        <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
    </Style>

    <Style x:Key="MyCell"
           TargetType="DataGridCell"
           >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="CellStyle" Value="{StaticResource MyCell}"/>
        <Setter Property="RowBackground" Value="#F5F5F5"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="ColumnWidth" Value="*"/>
        <Setter Property="RowHeight" Value="25"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="GridLinesVisibility" Value="All"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="HorizontalGridLinesBrush" Value="Gray"/>
        <Setter Property="VerticalGridLinesBrush" Value="Gray"/>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource MyColumnHeader}"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment"  Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style TargetType="Label">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment"  Value="Center"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="#F5F5F5"/>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment"  Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="Foreground" Value="Red"/>
                <Setter Property="ToolTip" 
                        Value="{Binding RelativeSource={RelativeSource Self}, 
                    Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Border">
        <Setter Property="Background" Value="#F5F5F5"></Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush"  Value="Black"/>
        <Setter Property="Margin" Value="0.5"/>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="Margin" Value="15 0 0 0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment"  Value="Center"/>
    </Style>

    <Style TargetType="Popup">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Placement" Value="Right"/>
        <Setter Property="FlowDirection" Value="RightToLeft"/>
    </Style>

</ResourceDictionary>