using System;
using ReportServer.Desktop.Entities;

UserControl "ReportServer.Desktop.Views.WpfResources.TaskListView" {
  "xmlns:sys": "clr-namespace:System;assembly=mscorlib"
  Resources:  ResourceDictionary {
    MergedDictionaries: [
      ResourceDictionary {
        Source: "TemplatesDictionary.g.xaml"
      }
    ]
    CollectionViewSource Key="TasksView" {
      Source: "{Binding Path=Tasks}"
      GroupDescriptions: PropertyGroupDescription { PropertyName: "GroupName" }
    }
  }
  Grid {
    RowDefinitions: [
      RowDefinition {Height: "40"}
      RowDefinition {}
    ]
    Grid {
      Grid.ColumnSpan: "4"
      ColumnDefinitions: [
        ColumnDefinition {Width: "Auto"}
        ColumnDefinition {}
      ]
      Label {
        Grid.Column: "1"
        Content: "Current tasks list"
        Margin: "2 2 0 2"
      }
      Button {
      Visibility: bind Shell.Role
		 convert (ServiceUserRole type) => type==ServiceUserRole.Editor? Visibility.Visible
			 : Visibility.Collapsed 
        Padding: "5"
        Command: bind Shell.CreateTaskCommand
        "Add new task"
      }
    }
    DataGrid {
      Grid.Row: "1"
      #DataGridMix(bind from $resource TasksView, bind SelectedTask)
      RowHeight: "{x:Static sys:Double.NaN}"
      InputBindings: [
        MouseBinding {
          MouseAction: "LeftDoubleClick"
          Command: bind EditTaskCommand
        }
        KeyBinding {
          Key: "Delete"
          Command: "ApplicationCommands.NotACommand"
        }
      ]
      Columns: [
        DataGridTextColumn {
          Header: "Id"
          Width: "0.25*"
          Binding: bind Id
        }
        DataGridTextColumn {
          Header: "Name"
          Width: "0.6*"
          Binding: bind Name
        }
        DataGridTextColumn {
          Header: "Schedule"
          Width: "0.35*"
          Binding: bind Schedule
        }
        DataGridTextColumn {
          Header: "Operations"
          Binding: bind Operations
          ElementStyle: Style {
            Setter {
              Property: "TextBlock.TextWrapping"
              Value: "Wrap"
            }
          }
        }
      ]
      GroupStyle: GroupStyle {
        ContainerStyle: Style {
          TargetType: GroupItem
          Setter { Property: "Margin",  Value: "0,0,0,5" }
          Setter {
            Property: "Template"
            Value: ControlTemplate {
              TargetType: GroupItem
              Expander {
                IsExpanded: true
                Background: resource dyn "AccentColorBrush"
                BorderBrush: resource dyn "AccentColorBrush3"
                Foreground: resource dyn "BlackBrush"
                BorderThickness: "1,1,1,5"
                Header: DockPanel {
                  TextBlock {
                    HorizontalAlignment: "Left"
                    FontWeight: "Bold"
                    Text: bind Name
                    Margin: "5,0,0,0"
                  }
                  TextBlock {
                    HorizontalAlignment: "Left"
                    FontWeight: "Bold"
                    Text: bind ItemCount set [ StringFormat: "(Count: {0})" ]
                    Margin: "5,0,0,0"
                  }
                }
                Content: ItemsPresenter { }
              }
            }
          }
        }
      }
    }
  }
}