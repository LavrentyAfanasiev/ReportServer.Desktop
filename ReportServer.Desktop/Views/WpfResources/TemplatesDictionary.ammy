using MahApps.Metro.Controls;
using MahApps.Metro.IconPacks;
using ReportServer.Desktop.ViewModels;
using ReportServer.Desktop.Views.WpfResources;
using ReportServer.Desktop.Entities;
using Xceed.Wpf.Toolkit;

ResourceDictionary {
  IntMsToMinsConverter Key="IntMsToMinsConverter" {  }
  NullToVisibility Key="NullToVisibility" {  }
  IntToVisiblity Key="IntToVisiblity" {  }
  ReportTypeToVisiblity Key="ReportTypeToVisiblity" {  }
  ParsingCategoryToBool Key="ParsingCategoryToBool" {  }
  IsRangeToVisibility Key="IsRangeToVisibility" {  }
  RangeToString Key="TwoBoxesConverter" {  }
  IsNotValueToVisibility Key="IsNotValueToVisibility" {  }
  MoreThenOneToVisibility Key="MoreThenOneToVisibility" {  }
  OperInstancesView Key="OperInstancesView" {  }
  SelectedInstanceFullView Key="SelectedInstanceFullView" {  }
  SelectedTaskInstancesView Key="SelectedTaskInstancesView" {  }
  TextBoxInputBehavior Key="TextBoxInputBehavior" {  }
  TaskIdAndRoleToVisMultiConverter Key="TaskIdAndRoleToVisMultiConverter" {  }
  InstanceStateAndRoleToVisMultiConverter Key="InstanceStateAndRoleToVisMultiConverter" {  }
  TaskListView Key="TaskListView" {  }
  PackIconModern  Key="CursorHand" { Kind: "CursorHand" }
  ObjectDataProvider Key="ParsingEnum" {
    ObjectType: ParsingCategory
    MethodName: "GetValues"
    MethodParameters: [ParsingCategory]
  }
  ObjectDataProvider Key="OperModeEnum" {
    ObjectType: OperMode
    MethodName: "GetValues"
    MethodParameters: [OperMode]
  }
  "xmlns:mah": "http://metro.mahapps.com/winfx/xaml/controls"
  Style Key="MyColumnHeader" {
    BasedOn: "{StaticResource MetroDataGridColumnHeader}"
    TargetType: DataGridColumnHeader
    Setter {
      Property: "HorizontalContentAlignment"
      Value: "Center"
    }
    Setter {
      Property: "VerticalContentAlignment"
      Value: "Center"
    }
    Setter {
      Property: "Height"
      Value: "30"
    }
    Setter {
      Property: "Background"
      Value: "#F5F5F5"
    }
    Setter {
      Property: "mah:ControlsHelper.ContentCharacterCasing"
      Value: "Normal"
    }
  }

  Style Key="MyCell" {
    TargetType: "DataGridCell"
    Setter {
      Property: "Template"
      Value: ControlTemplate {
        TargetType: DataGridCell
        Grid {
          Background: "{TemplateBinding Background}"
          ContentPresenter { VerticalAlignment: "Center" }
        }
      }
    }
  }

  Style {
    TargetType: ToggleSwitch
	BasedOn: resource "MahApps.Metro.Styles.ToggleSwitch"
	#Setter("FontWeight","Normal")
	#Setter("FontSize","12")
  }

  Style{
    TargetType: ComboBox
	//BasedOn: resource "MetroComboBox"
	#Setter("HorizontalAlignment","Stretch")
  }

  Style {
    TargetType: Button

	BasedOn: resource "MetroButton"
	#Setter("Focusable", "false")
	#Setter("Background","#F5F5F5")
	#Setter("Margin",2.5)
	#Setter("FontWeight","DemiBold")
	#Setter("MaxWidth",150)
	 }

  Style {
    TargetType: DataGrid
    Setter {
      Property: "CellStyle"
      Value: "{StaticResource MyCell}"
    }
    Setter {
      Property: "ColumnHeaderStyle"
      Value: "{StaticResource MyColumnHeader}"
    }
  }
  Style {
    TargetType: "TextBlock"
    Setter {
      Property: "HorizontalAlignment"
      Value: "Center"
    }
    Setter {
      Property: "VerticalAlignment"
      Value: "Center"
    }
    Setter {
      Property: "TextWrapping"
      Value: "Wrap"
    }
  }


  Style {
    TargetType: "Label"
    Setter {
      Property: "HorizontalContentAlignment"
      Value: "Left"
    }
    Setter {
      Property: "VerticalContentAlignment"
      Value: "Center"
    }
    Setter {
      Property: "FontWeight"
      Value: "DemiBold"
    }
    Setter {
      Property: "Background"
      Value: "#F5F5F5"
    }
    Setter {
      Property: "Margin"
      Value: "2"
    }
  }
  Style {
    TargetType: "TextBox"
    BasedOn: "{StaticResource MetroTextBox}"
    Setter {
      Property: "HorizontalAlignment"
      Value: "Stretch"
    }
    Setter {
      Property: "VerticalAlignment"
      Value: "Stretch"
    }
    Setter {
      Property: "HorizontalContentAlignment"
      Value: "Center"
    }
    Setter {
      Property: "VerticalContentAlignment"
      Value: "Center"
    }
    Setter {
      Property: "TextWrapping"
      Value: "Wrap"
    }
    Setter {
      Property: "AcceptsReturn"
      Value: "True"
    }
  }
  Style Key="NoWrapTextBox" {
    TargetType: "TextBox"
    BasedOn: "{StaticResource MetroTextBox}"
    Setter {
      Property: "TextWrapping"
      Value: "NoWrap"
    }
    Setter {
      Property: "AcceptsReturn"
      Value: "False"
    }
  }
  Style {
    TargetType: "Border"
    Setter {
      Property: "BorderThickness"
      Value: "1"
    }
    Setter {
      Property: "BorderBrush"
      Value: "#F5F5F5"
    }
    Setter {
      Property: "Margin"
      Value: "0.5"
    }
  }
  Style {
    TargetType: "CheckBox"
    Setter {
      Property: "Margin"
      Value: "5 0 0 0"
    }
    Setter {
      Property: "HorizontalAlignment"
      Value: "Center"
    }
    Setter {
      Property: "VerticalAlignment"
      Value: "Center"
    }
  }
  Style {
    TargetType: "Popup"
    Setter {
      Property: "HorizontalAlignment"
      Value: "Right"
    }
    Setter {
      Property: "Placement"
      Value: "Right"
    }
    Setter {
      Property: "FlowDirection"
      Value: "RightToLeft"
    }
  }
  Style {
    TargetType: "ListViewItem"
    Setter {
      Property: "Padding"
      Value: "0"
    }
    Setter {
      Property: "Template"
      Value: ControlTemplate 
		 {
        TargetType: "ListViewItem"
        Border {
          Name: "Border"
          BorderBrush: "Transparent"
          BorderThickness: "0"
          ContentPresenter {  }
        }
      }
    }
  }
  DataTemplate { DataType: ApiOperTemplate }
  }