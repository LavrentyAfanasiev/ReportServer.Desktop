using MahApps.Metro.Controls;
using MahApps.Metro.IconPacks;
using ReportServer.Desktop.ViewModels;
using ReportServer.Desktop.Views.WpfResources;
using ReportServer.Desktop.Entities;

ResourceDictionary {
  IntMsToMinsConverter Key="IntMsToMinsConverter" {  }
  NullToVisibility Key="NullToVisibility" {  }
  IntToVisiblity Key="IntToVisiblity" {  }
  ReportTypeToVisiblity Key="ReportTypeToVisiblity" {  }
  ParsingCategoryToBool Key="ParsingCategoryToBool" {  }
  IsRangeToVisibility Key="IsRangeToVisibility" {  }
  RangeToString Key="TwoBoxesConverter" {  }
  IsNotValueToVisibility Key="IsNotValueToVisibility" {  }
  MoreThenOneToVisibility Key="MoreThenOneToVisibility" {  }
  OperInstancesView Key="OperInstancesView" {  }
  SelectedInstanceFullView Key="SelectedInstanceFullView" {  }
  SelectedTaskInstancesView Key="SelectedTaskInstancesView" {  }
  TaskListView Key="TaskListView" {  }
  PackIconModern  Key="CursorHand" { Kind: "CursorHand" }
  ObjectDataProvider Key="ParsingEnum" {
    ObjectType: ParsingCategory
    MethodName: "GetValues"
    MethodParameters: [ParsingCategory]
  }
  ObjectDataProvider Key="OperModeEnum" {
    ObjectType: OperMode
    MethodName: "GetValues"
    MethodParameters: [OperMode]
  }
    "xmlns:mah": "http://metro.mahapps.com/winfx/xaml/controls"
  Style Key="MyColumnHeader" {
    BasedOn: "{StaticResource MetroDataGridColumnHeader}"
    TargetType: DataGridColumnHeader
    Setter {
      Property: "HorizontalContentAlignment"
      Value: "Center"
    }
    Setter {
      Property: "VerticalContentAlignment"
      Value: "Center"
    }
    Setter {
      Property: "Height"
      Value: "30"
    }
    Setter {
      Property: "Background"
      Value: "#F5F5F5"
    }
    Setter {
      Property: "mah:ControlsHelper.ContentCharacterCasing"
      Value: "Normal"
    }
  }
  Style Key="MyCell" {
    TargetType: "DataGridCell"
    Setter {
      Property: "Template"
      Value: ControlTemplate {
        TargetType: DataGridCell
        Grid {
          Background: "{TemplateBinding Background}"
          ContentPresenter { VerticalAlignment: "Center" }
        }
      }
    }
  }
  Style {
    TargetType: "Button"
    Setter {
      Property: "Background"
      Value: "#F5F5F5"
    }
    Setter {
      Property: "Margin"
      Value: "2.5"
    }
  }
  Style {
    TargetType: "DataGrid"
    Setter {
      Property: "CellStyle"
      Value: "{StaticResource MyCell}"
    }
    Setter {
      Property: "ColumnHeaderStyle"
      Value: "{StaticResource MyColumnHeader}"
    }
  }
  Style {
    TargetType: "TextBlock"
    Setter {
      Property: "HorizontalAlignment"
      Value: "Center"
    }
    Setter {
      Property: "VerticalAlignment"
      Value: "Center"
    }
    Setter {
      Property: "TextWrapping"
      Value: "Wrap"
    }
  }
  Style {
    TargetType: "Label"
    Setter {
      Property: "HorizontalContentAlignment"
      Value: "Left"
    }
    Setter {
      Property: "VerticalContentAlignment"
      Value: "Center"
    }
    Setter {
      Property: "FontWeight"
      Value: "DemiBold"
    }
    Setter {
      Property: "Background"
      Value: "#F5F5F5"
    }
    Setter {
      Property: "Margin"
      Value: "2"
    }
  }
  Style {
    TargetType: "TextBox"
    BasedOn: "{StaticResource MetroTextBox}"
    Setter {
      Property: "HorizontalAlignment"
      Value: "Stretch"
    }
    Setter {
      Property: "VerticalAlignment"
      Value: "Stretch"
    }
    Setter {
      Property: "HorizontalContentAlignment"
      Value: "Center"
    }
    Setter {
      Property: "VerticalContentAlignment"
      Value: "Center"
    }
    Setter {
      Property: "TextWrapping"
      Value: "Wrap"
    }
    Setter {
      Property: "AcceptsReturn"
      Value: "True"
    }
  }
  Style Key="NoWrapTextBox" {
    TargetType: "TextBox"
    BasedOn: "{StaticResource MetroTextBox}"
    Setter {
      Property: "TextWrapping"
      Value: "NoWrap"
    }
    Setter {
      Property: "AcceptsReturn"
      Value: "False"
    }
  }
  Style {
    TargetType: "Border"
    Setter {
      Property: "BorderThickness"
      Value: "1"
    }
    Setter {
      Property: "BorderBrush"
      Value: "#F5F5F5"
    }
    Setter {
      Property: "Margin"
      Value: "0.5"
    }
  }
  Style {
    TargetType: "CheckBox"
    Setter {
      Property: "Margin"
      Value: "5 0 0 0"
    }
    Setter {
      Property: "HorizontalAlignment"
      Value: "Center"
    }
    Setter {
      Property: "VerticalAlignment"
      Value: "Center"
    }
  }
  Style {
    TargetType: "Popup"
    Setter {
      Property: "HorizontalAlignment"
      Value: "Right"
    }
    Setter {
      Property: "Placement"
      Value: "Right"
    }
    Setter {
      Property: "FlowDirection"
      Value: "RightToLeft"
    }
  }
  Style {
    TargetType: "ListViewItem"
    Setter {
      Property: "Padding"
      Value: "0"
    }
    Setter {
      Property: "Template"
      Value: ControlTemplate 
		 {
        TargetType: "ListViewItem"
        Border {
          Name: "Border"
          BorderBrush: "Transparent"
          BorderThickness: "0"
          ContentPresenter {  }
        }
      }
    }
  }
  DataTemplate {
    DataType: RecepientEditorViewModel
    Grid {
      RowDefinitions: [
        RowDefinition {
          Height: "Auto"
        }
        RowDefinition {
          Height: "Auto"
        }
        RowDefinition {
          Height: "Auto"
        }
        RowDefinition {
          Height: "Auto"
        }
        RowDefinition {
        }
      ]
      ColumnDefinitions: [
        ColumnDefinition {
          Width: "Auto"
        }
        ColumnDefinition {
          Width: "Auto"
        }
      ]
      Label {
        Background: "White"
        HorizontalAlignment: "Left"
        Margin: "18 3 3 3"
        Content: "Name"
      }
      TextBox {
        Grid.Column: "1"
        Text: "{Binding Name,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
        TextBoxHelper.Watermark: "Enter group name here"
        TextBoxHelper.ClearTextButton: "True"
        Width: "150"
        TextWrapping: "NoWrap"
        AcceptsReturn: "False"
        HorizontalAlignment: "Left"
        HorizontalContentAlignment: "Left"
      }
      Label {
        Grid.Row: "1"
        Background: "White"
        HorizontalAlignment: "Left"
        Margin: "18 3 3 3"
        Content: "Addresses"
      }
      TextBox {
        Grid.Row: "1"
        Grid.Column: "1"
        Text: "{Binding Addresses,UpdateSourceTrigger=PropertyChanged,             ValidatesOnDataErrors=True}"
        TextBoxHelper.Watermark: "Enter e-mail addresses of recepients separated by semicolons"
        TextBoxHelper.ClearTextButton: "True"
        Width: "500"
        TextWrapping: "NoWrap"
        AcceptsReturn: "False"
        HorizontalAlignment: "Left"
        HorizontalContentAlignment: "Left"
      }
      Label {
        Grid.Row: "2"
        Background: "White"
        HorizontalAlignment: "Left"
        Margin: "18 3 3 3"
        Content: "Blind copy addresses"
      }
      TextBox {
        Grid.Row: "2"
        Grid.Column: "1"
        Text: "{Binding AddressesBcc,UpdateSourceTrigger=PropertyChanged,             ValidatesOnDataErrors=True}"
        TextBoxHelper.Watermark: "Enter e-mail addresses separated by semicolons for blind copy sending"
        TextBoxHelper.ClearTextButton: "True"
        Width: "500"
        TextWrapping: "NoWrap"
        AcceptsReturn: "False"
        HorizontalAlignment: "Left"
        HorizontalContentAlignment: "Left"
      }
      Grid {
        Grid.Row: "3"
        Grid.Column: "1"
        Margin: "0 0 0 50"
        ColumnDefinitions: [
          ColumnDefinition {
          }
          ColumnDefinition {
            Width: "0.4*"
          }
        ]
        StackPanel {
          Grid.Column: "1"
          Orientation: "Horizontal"
          Button {
            Command: "{Binding SaveChangesCommand}"
            IsEnabled: "{Binding IsValid}"
            Height: "25"
            Width: "100"
            "Save"
          }
          Button {
            Command: "{Binding CancelCommand}"
            Height: "25"
            Width: "100"
            "Cancel"
          }
        }
      }
    }
  }
  DataTemplate { DataType: ApiOperTemplate }
}